%include polycode.fmt
%include spacing.fmt

%-------------------------------------------------------------------------------
% Definitions
%

%if style /= newcode

% Due to Jeremy Gibbons:
\def\doubleequals{\mathrel{\unitlength 0.01em
  \begin{picture}(78,40)
    \put(7,34){\line(1,0){25}} \put(45,34){\line(1,0){25}}
    \put(7,14){\line(1,0){25}} \put(45,14){\line(1,0){25}}
  \end{picture}}}

%endif

%-------------------------------------------------------------------------------
% Commands

%if style /= newcode

\renewcommand\Varid[1]{\mathord{\textsf{#1}}}
\let\Conid\Varid

\newcommand\Con[1]{{\color{Con}\Conid{#1}}}
\newcommand\Typ[1]{{\color{Typ}\Conid{#1}}}
\newcommand\Var[1]{{\color{Var}\Varid{#1}}}
\newcommand\Key[1]{{\color{Key}\textsf{\textbf{#1}}}}
\newcommand\Module[1]{{\color{Module}\Conid{#1}}}

\newcommand\struct[1]{#1^{\circ}}

%endif

%-------------------------------------------------------------------------------
% Colors

%if style /= newcode

\colorlet{Typ}{red!50!black}
\colorlet{Con}{black}
\colorlet{Var}{black}
\colorlet{Key}{orange!90!black}
\colorlet{Module}{red!50!blue}

%endif

%-------------------------------------------------------------------------------
% Formats
%

% Ignoring
%if style == newcode
%format dots                    =  " "
%else
%format dots                    =  "..."
%endif

% Ignoring
%if style == newcode
%format UnitTuple               =  "()"
%else
%format UnitTuple               =  "\Typ{()}"
%endif

%if style /= newcode

% Standard Haskell symbols
%format undefined               =  "\Var{undefined}"
%format not                     =  "\Var{not}"
%format ==                      =  "\doubleequals "
%format /=                      =  "\not\doubleequals "

% Standard Haskell types
%format Int                     =  "\Typ{Int}"
%format Integer                 =  "\Typ{Integer}"
%format Float                   =  "\Typ{Float}"
%format Double                  =  "\Typ{Double}"
%format Char                    =  "\Typ{Char}"
%format Either                  =  "\Typ{Either}"

% Typ variables
%format aa                      =  "\Typ{a}"
%format bb                      =  "\Typ{b}"
%format cc                      =  "\Typ{c}"
%format dd                      =  "\Typ{d}"
%format ee                      =  "\Typ{e}"
%format ff                      =  "\Typ{f}"
%format gg                      =  "\Typ{g}"
%format hh                      =  "\Typ{h}"
%format ii                      =  "\Typ{i}"
%format jj                      =  "\Typ{j}"
%format kk                      =  "\Typ{k}"
%format ll                      =  "\Typ{l}"
%format mm                      =  "\Typ{m}"
%format nn                      =  "\Typ{n}"
%format oo                      =  "\Typ{o}"
%format pp                      =  "\Typ{p}"
%format qq                      =  "\Typ{q}"
%format rr                      =  "\Typ{r}"
%format ss                      =  "\Typ{s}"
%format tt                      =  "\Typ{t}"
%format uu                      =  "\Typ{u}"
%format vv                      =  "\Typ{v}"
%format ww                      =  "\Typ{w}"
%format xx                      =  "\Typ{x}"
%format yy                      =  "\Typ{y}"
%format zz                      =  "\Typ{z}"

% Structure symbols
%format UnitS                   = "\mathbb{1}"
%format *                       = "*"

% EMGM symbols
%format :+:                     = "\mathbin{\color{Typ}\vcentcolon\kern-0.4em+\kern-0.4em\vcentcolon}"
%format :*:                     = "\mathbin{\color{Typ}\vcentcolon\kern-0.4em*\kern-0.4em\vcentcolon}"
%format ::*::                   = "\mathbin{\color{Con}\vcentcolon\kern-0.4em*\kern-0.4em\vcentcolon}"

% EMGM types
%format UnitT                   = "\Typ{Unit}"
%format Unit                    = "\Con{Unit}"
%format L                       = "\Con{L}"
%format R                       = "\Con{R}"
%format EPT                     = "\Typ{EP}"
%format EP                      = "\Con{EP}"
%format ConDescrT               = "\Typ{ConDescr}"
%format ConDescr                = "\Con{ConDescr}"
%format TypeDescrT              = "\Typ{TypeDescr}"
%format TypeDescr               = "\Con{TypeDescr}"

% Other types
%format Tree                    = "\Typ{Tree}"
%format Tip                     = "\Con{Tip}"
%format Leaf                    = "\Con{Leaf}"
%format Bin                     = "\Con{Bin}"
%format TreeS                   = "\struct{" Tree "}"
%format TreeS'                  = TreeS

%endif
